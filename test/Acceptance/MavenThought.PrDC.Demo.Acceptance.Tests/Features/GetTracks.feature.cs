// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace MavenThought.PrDC.Demo.Acceptance.Tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Getting Tracks using REST API")]
    public partial class GettingTracksUsingRESTAPIFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GetTracks.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Getting Tracks using REST API", "As a REST API user\r\nI want to query the tracks list\r\nSo I can use the information" +
                    "", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get tracks list")]
        public virtual void GetTracksList()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get tracks list", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "title",
                        "tracks"});
            table1.AddRow(new string[] {
                        "Some Ms..",
                        "Microsoft, SharePoint, SQL Server"});
            table1.AddRow(new string[] {
                        "Phone me",
                        "WP7, Mobile, Android"});
            table1.AddRow(new string[] {
                        "The GWT",
                        "Java, Web"});
            table1.AddRow(new string[] {
                        "Capybara",
                        "Ruby, Web, Agile, User Experience"});
            table1.AddRow(new string[] {
                        "TDD",
                        "Ruby, Developer Foundation"});
            table1.AddRow(new string[] {
                        "The Office",
                        "Office, Security, Web"});
#line 7
testRunner.Given("I have the following sessions with tracks:", ((string)(null)), table1);
#line 15
testRunner.When("I get \"tracks\" as JSON");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "track",
                        "count"});
            table2.AddRow(new string[] {
                        "Microsoft",
                        "1"});
            table2.AddRow(new string[] {
                        "SharePoint",
                        "1"});
            table2.AddRow(new string[] {
                        "SQL Server",
                        "1"});
            table2.AddRow(new string[] {
                        "WP7",
                        "1"});
            table2.AddRow(new string[] {
                        "Mobile",
                        "1"});
            table2.AddRow(new string[] {
                        "Android",
                        "1"});
            table2.AddRow(new string[] {
                        "Java",
                        "1"});
            table2.AddRow(new string[] {
                        "Web",
                        "3"});
            table2.AddRow(new string[] {
                        "Ruby",
                        "2"});
            table2.AddRow(new string[] {
                        "Agile",
                        "1"});
            table2.AddRow(new string[] {
                        "Office",
                        "1"});
            table2.AddRow(new string[] {
                        "Security",
                        "1"});
            table2.AddRow(new string[] {
                        "User Experience",
                        "1"});
            table2.AddRow(new string[] {
                        "Developer Foundation",
                        "1"});
#line 16
testRunner.Then("I should get a response with tracks:", ((string)(null)), table2);
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
